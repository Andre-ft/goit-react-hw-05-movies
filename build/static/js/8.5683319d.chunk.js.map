{"version":3,"sources":["components/MovieDetailsPage/MovieDetailsPage.module.css","components/MovieDetailsPage/MovieDetailsPage.js"],"names":["module","exports","Cast","lazy","Reviews","MovieDetailsPage","movieId","useParams","useState","movie","setMovie","useRouteMatch","url","path","history","useHistory","location","useLocation","useEffect","bookShelfAPI","then","console","log","type","onClick","push","state","from","label","className","s","container","src","poster_path","alt","title","inner_block","vote_average","overview","genres","map","genre","name","to","pathname","fallback"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,UAAY,oCAAoC,YAAc,wC,wJCc1EC,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBAAM,gCAEZ,SAASE,IAAoB,IAAD,MACjCC,EAAYC,cAAZD,QACR,EAA0BE,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBC,cAAdC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KAIPC,EAAUC,cACVC,EAAWC,cAEjBC,qBAAU,WACRC,IAA4Bb,GAASc,KAAKV,GAC1CW,QAAQC,IAAI,UAAWR,GACvBO,QAAQC,IAAI,WAAYN,KACvB,CAACV,IAMJ,OACE,qCAIGG,GACC,qCACE,wBAAQc,KAAK,SAASC,QAXb,WAAO,IAAD,MACrBV,EAAQW,KAAR,iBAAaT,QAAb,IAAaA,GAAb,UAAaA,EAAUU,aAAvB,iBAAa,EAAiBC,YAA9B,aAAa,EAAuBX,gBAApC,QAAgD,YAU1C,0BACGA,QADH,IACGA,GADH,UACGA,EAAUU,aADb,iBACG,EAAiBC,YADpB,aACG,EAAuBC,aAD1B,QACmC,YAGnC,sBAAKC,UAAWC,IAAEC,UAAlB,UACE,qBAAKC,IAAG,UA3BF,mCA2BE,OAAevB,EAAMwB,aAAeC,IAAKzB,EAAM0B,QACvD,sBAAKN,UAAWC,IAAEM,YAAlB,UACE,6BAAK3B,EAAM0B,QACX,6CAAqC,GAArB1B,EAAM4B,aAAtB,OACA,0CACA,8BAAM5B,EAAM6B,WACZ,wCACA,8BAAM7B,EAAM8B,OAAOC,KAAI,SAACC,GAAD,gBAAcA,EAAMC,KAApB,gBAI3B,uBAEA,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKhC,EAAL,SACRc,MAAO,CAAEC,KAAMX,EAASU,MAAMC,OAHlC,kBASA,uBAEA,cAAC,IAAD,CACEgB,GAAI,CACFC,SAAS,GAAD,OAAKhC,EAAL,YACRc,MAAO,CAAEC,KAAMX,EAASU,MAAMC,OAHlC,qBASA,0BAIJ,eAAC,WAAD,CAAUkB,SAAU,4CAApB,UACE,cAAC,IAAD,CAAOhC,KAAI,UAAKA,EAAL,SAAX,SACE,cAACX,EAAD,CAAMI,QAASA,MAGjB,cAAC,IAAD,CAAOO,KAAI,UAAKA,EAAL,YAAX,SACE,cAACT,EAAD,CAASE,QAASA","file":"static/js/8.5683319d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieDetailsPage_container__10BCA\",\"inner_block\":\"MovieDetailsPage_inner_block__2jIA6\"};","import { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport {\r\n  NavLink,\r\n  Route,\r\n  useParams,\r\n  useRouteMatch,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport PageHeading from \"../PageHeading/PageHeading\";\r\nimport * as bookShelfAPI from \"../../services/movie-api\";\r\nimport s from \"./MovieDetailsPage.module.css\";\r\n// import Cast from \"../Cast/Cast\";\r\n// import Reviews from \"../Reviews/Reviews\";\r\n\r\nconst Cast = lazy(() => import(\"../Cast/Cast\"));\r\nconst Reviews = lazy(() => import(\"../Reviews/Reviews\"));\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const { url, path } = useRouteMatch();\r\n  //   const BASE_URL = \"https://api.themoviedb.org/3\";\r\n  const IMG_URL = \"https://image.tmdb.org/t/p/w300\";\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    bookShelfAPI.fetchMovieById(movieId).then(setMovie);\r\n    console.log(\"history\", history);\r\n    console.log(\"location\", location);\r\n  }, [movieId]);\r\n\r\n  const onGoBack = () => {\r\n    history.push(location?.state?.from?.location ?? \"/movies\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <PageHeading text={`Movie ${movieId}`} /> */}\r\n      {/* {console.log(movie)} */}\r\n\r\n      {movie && (\r\n        <>\r\n          <button type=\"button\" onClick={onGoBack}>\r\n            {location?.state?.from?.label ?? \"Go Back\"}\r\n          </button>\r\n\r\n          <div className={s.container}>\r\n            <img src={`${IMG_URL}${movie.poster_path}`} alt={movie.title} />\r\n            <div className={s.inner_block}>\r\n              <h2>{movie.title}</h2>\r\n              <p>User Score: {movie.vote_average * 10}%</p>\r\n              <h2>Overview</h2>\r\n              <div>{movie.overview}</div>\r\n              <h2>Genres</h2>\r\n              <div>{movie.genres.map((genre) => `${genre.name} `)}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <NavLink\r\n            to={{\r\n              pathname: `${url}/cast`,\r\n              state: { from: location.state.from },\r\n            }}\r\n          >\r\n            Cast\r\n          </NavLink>\r\n\r\n          <br />\r\n\r\n          <NavLink\r\n            to={{\r\n              pathname: `${url}/reviews`,\r\n              state: { from: location.state.from },\r\n            }}\r\n          >\r\n            Reviews\r\n          </NavLink>\r\n\r\n          <hr />\r\n        </>\r\n      )}\r\n\r\n      <Suspense fallback={<h1>LOADING...</h1>}>\r\n        <Route path={`${path}/cast`}>\r\n          <Cast movieId={movieId} />\r\n        </Route>\r\n\r\n        <Route path={`${path}/reviews`}>\r\n          <Reviews movieId={movieId} />\r\n        </Route>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}